extend type Query
{
	getUserAddressDetailsForLoggedInUserId : [UserAddressDetail]
	getUserAddressDetailsByUserUuid(userUuid : String) : [UserAddressDetail]
	
}

extend type Mutation{
	addNewUserAddressDetailsForLoggedInUserId(userAddressDetailInput: UserAddressDetailInput) : UserAddressDetailResponse
	addNewUserAddressDetails(userAddressDetailInput: UserAddressDetailInput, userUuid : String) : UserAddressDetailResponse
}



type UserAddressDetail{
    uuid: String!
    user: User!
    addressName: String!
    addressType: String!
    markAsDefaultFlag: Boolean!
    addressLine1: String!
    addressLine2: String
    addressLine3: String
    city: String!
    state: String!
    country: String!
    zipCode: String!
    phoneNumber: String!
    notes: String
    createdDate: String!
    updatedDate: String
    createdBy: String!
    updatedBy: String
    deleteFlag: Boolean!
}

input UserAddressDetailInput{
    uuid: String
    user: UserInput!
    addressName: String!
    addressType: String!
    markAsDefaultFlag: Boolean
    addressLine1: String!
    addressLine2: String
    addressLine3: String
    city: String!
    state: String!
    country: String!
    zipCode: String!
    phoneNumber: String!
    notes: String
    createdDate: String
    updatedDate: String
    createdBy: String
    updatedBy: String
    deleteFlag: Boolean
}

type UserAddressDetailResponse
{
	userAddressDetail: UserAddressDetail
	userAddressDetails: [UserAddressDetail]
	errorMessage: String
	successMessage: String
}